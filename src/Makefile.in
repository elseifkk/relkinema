# Makefile.in generated by automake 1.11.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = relkinema$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(shelldesktopdir)" \
	"$(DESTDIR)$(shellrcdir)"
PROGRAMS = $(bin_PROGRAMS)
am_relkinema_OBJECTS = aboutcls.$(OBJEXT) kinemaplotcls.$(OBJEXT) \
	linereadcls.$(OBJEXT) main.$(OBJEXT) mboxcls.$(OBJEXT) \
	mdmcls.$(OBJEXT) rclistcls.$(OBJEXT) relkinemaCls.$(OBJEXT) \
	resultwindowcls.$(OBJEXT) rkcalccls.$(OBJEXT) rkcore.$(OBJEXT) \
	rwthreadcls.$(OBJEXT)
#>- relkinema_OBJECTS = $(am_relkinema_OBJECTS)
#>+ 9
relkinema_final_OBJECTS = relkinema.all_cpp.o rkcore.o 
relkinema_nofinal_OBJECTS = aboutcls.$(OBJEXT) kinemaplotcls.$(OBJEXT) \
	linereadcls.$(OBJEXT) main.$(OBJEXT) mboxcls.$(OBJEXT) \
	mdmcls.$(OBJEXT) rclistcls.$(OBJEXT) relkinemaCls.$(OBJEXT) \
	resultwindowcls.$(OBJEXT) rkcalccls.$(OBJEXT) rkcore.$(OBJEXT) \
	rwthreadcls.$(OBJEXT) about.$(OBJEXT) kinemaPlot.$(OBJEXT) lineread.$(OBJEXT) mdmDlg.$(OBJEXT) message.$(OBJEXT) rclist.$(OBJEXT) relkinemaDlg.$(OBJEXT) resultWindow.$(OBJEXT) rkCalcDlg.$(OBJEXT)\
rkcalccls.moc.o rclistcls.moc.o linereadcls.moc.o 
@KDE_USE_FINAL_FALSE@relkinema_OBJECTS = $(relkinema_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@relkinema_OBJECTS = $(relkinema_final_OBJECTS)
am__DEPENDENCIES_1 =
relkinema_DEPENDENCIES = $(am__DEPENDENCIES_1)
#>- relkinema_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(relkinema_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
relkinema_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(relkinema_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
SOURCES = $(relkinema_SOURCES)
DIST_SOURCES = $(relkinema_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
DATA = $(shelldesktop_DATA) $(shellrc_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

# these are the headers for your project
noinst_HEADERS = aboutcls.h kinemaplotcls.h mboxcls.h mdmcls.h misc.h \
	relkinemaCls.h resultwindowcls.h rkcalccls.h rkcore.h rwthreadcls.h


# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO
KDE_ICON = AUTO

# the application source, library search path, and link libraries
#>- relkinema_SOURCES = about.ui aboutcls.cpp kinemaPlot.ui kinemaplotcls.cpp \
#>- 	lineread.ui linereadcls.cpp main.cpp mboxcls.cpp mdmDlg.ui mdmcls.cpp message.ui \
#>- 	rclist.ui rclistcls.cpp relkinemaCls.cpp relkinemaDlg.ui resultWindow.ui \
#>- 	resultwindowcls.cpp rkCalcDlg.ui rkcalccls.cpp rkcore.f90 rwthreadcls.cpp
#>+ 4
relkinema_SOURCES= aboutcls.cpp  kinemaplotcls.cpp \
	 linereadcls.cpp main.cpp mboxcls.cpp  mdmcls.cpp  \
	 rclistcls.cpp relkinemaCls.cpp   \
	resultwindowcls.cpp  rkcalccls.cpp rkcore.f90 rwthreadcls.cpp about.cpp kinemaPlot.cpp lineread.cpp mdmDlg.cpp message.cpp rclist.cpp relkinemaDlg.cpp resultWindow.cpp rkCalcDlg.cpp

relkinema_LDFLAGS = $(KDE_RPATH) $(all_libraries)
relkinema_LDADD = $(LIB_KDEUI) -lgfortran -lkio -lfzcal

# this is where the desktop file will go 
shelldesktopdir = $(kde_appsdir)/Utilities
shelldesktop_DATA = relkinema.desktop

# this is where the shell's XML-GUI resource file goes
shellrcdir = $(kde_datadir)/relkinema
shellrc_DATA = relkinemaui.rc
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .f90 .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
#>- 	        && { if test -f $@; then exit 0; else break; fi; }; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
#>- 	$(am__cd) $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
relkinema$(EXEEXT): $(relkinema_OBJECTS) $(relkinema_DEPENDENCIES) 
	@rm -f relkinema$(EXEEXT)
	$(relkinema_LINK) $(relkinema_OBJECTS) $(relkinema_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aboutcls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kinemaplotcls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linereadcls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mboxcls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mdmcls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rclistcls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/relkinemaCls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resultwindowcls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rkcalccls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rwthreadcls.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

.f90.o:
	$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.lo:
	$(LTFCCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-shelldesktopDATA: $(shelldesktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shelldesktopdir)" || $(MKDIR_P) "$(DESTDIR)$(shelldesktopdir)"
	@list='$(shelldesktop_DATA)'; test -n "$(shelldesktopdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(shelldesktopdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(shelldesktopdir)" || exit $$?; \
	done

uninstall-shelldesktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shelldesktop_DATA)'; test -n "$(shelldesktopdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(shelldesktopdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(shelldesktopdir)" && rm -f $$files
install-shellrcDATA: $(shellrc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shellrcdir)" || $(MKDIR_P) "$(DESTDIR)$(shellrcdir)"
	@list='$(shellrc_DATA)'; test -n "$(shellrcdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(shellrcdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(shellrcdir)" || exit $$?; \
	done

uninstall-shellrcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shellrc_DATA)'; test -n "$(shellrcdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(shellrcdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(shellrcdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(shelldesktopdir)" "$(DESTDIR)$(shellrcdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

#>- install-data-am: install-shelldesktopDATA install-shellrcDATA
#>+ 1
install-data-am: install-kde-icons  install-shelldesktopDATA install-shellrcDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-shelldesktopDATA \
#>- 	uninstall-shellrcDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-shelldesktopDATA \
	uninstall-shellrcDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-shelldesktopDATA install-shellrcDATA install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-shelldesktopDATA uninstall-shellrcDATA


messages: rc.cpp
	$(EXTRACTRC) `find . -name \*.ui -o -name \*.rc` > rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/relkinema.pot

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
resultwindowcls.moc: $(srcdir)/resultwindowcls.h
	$(MOC) $(srcdir)/resultwindowcls.h -o resultwindowcls.moc

#>+ 2
mocs: resultwindowcls.moc

#>+ 3
rkcalccls.moc.cpp: $(srcdir)/rkcalccls.h
	$(MOC) $(srcdir)/rkcalccls.h -o rkcalccls.moc.cpp

#>+ 2
mocs: rkcalccls.moc.cpp

#>+ 3
kinemaplotcls.moc: $(srcdir)/kinemaplotcls.h
	$(MOC) $(srcdir)/kinemaplotcls.h -o kinemaplotcls.moc

#>+ 2
mocs: kinemaplotcls.moc

#>+ 3
mboxcls.moc: $(srcdir)/mboxcls.h
	$(MOC) $(srcdir)/mboxcls.h -o mboxcls.moc

#>+ 2
mocs: mboxcls.moc

#>+ 3
relkinemaCls.moc: $(srcdir)/relkinemaCls.h
	$(MOC) $(srcdir)/relkinemaCls.h -o relkinemaCls.moc

#>+ 2
mocs: relkinemaCls.moc

#>+ 3
aboutcls.moc: $(srcdir)/aboutcls.h
	$(MOC) $(srcdir)/aboutcls.h -o aboutcls.moc

#>+ 2
mocs: aboutcls.moc

#>+ 3
mdmcls.moc: $(srcdir)/mdmcls.h
	$(MOC) $(srcdir)/mdmcls.h -o mdmcls.moc

#>+ 2
mocs: mdmcls.moc

#>+ 3
rclistcls.moc.cpp: $(srcdir)/rclistcls.h
	$(MOC) $(srcdir)/rclistcls.h -o rclistcls.moc.cpp

#>+ 2
mocs: rclistcls.moc.cpp

#>+ 3
linereadcls.moc.cpp: $(srcdir)/linereadcls.h
	$(MOC) $(srcdir)/linereadcls.h -o linereadcls.moc.cpp

#>+ 2
mocs: linereadcls.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  resultwindowcls.moc rkcalccls.moc.cpp kinemaplotcls.moc mboxcls.moc relkinemaCls.moc aboutcls.moc mdmcls.moc rclistcls.moc.cpp linereadcls.moc.cpp

#>+ 2
KDE_DIST=mdmDlg.ui relkinemaDlg.ui hi32-app-relkinema.png resultWindow.ui rkCalcDlg.ui linereadcls.h message.ui relkinema.lsm about.ui rclist.ui lineread.ui rclistcls.h Makefile.in hi16-app-relkinema.png pix.h kinemaPlot.ui relkinema.desktop Makefile.am relkinemaui.rc 

#>+ 12
clean-ui:
	-rm -f \
	about.cpp about.h about.moc \
	kinemaPlot.cpp kinemaPlot.h kinemaPlot.moc \
	lineread.cpp lineread.h lineread.moc \
	mdmDlg.cpp mdmDlg.h mdmDlg.moc \
	message.cpp message.h message.moc \
	rclist.cpp rclist.h rclist.moc \
	relkinemaDlg.cpp relkinemaDlg.h relkinemaDlg.moc \
	resultWindow.cpp resultWindow.h resultWindow.moc \
	rkCalcDlg.cpp rkCalcDlg.h rkCalcDlg.moc 

#>+ 2
docs-am:

#>+ 10
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-relkinema.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/relkinema.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-relkinema.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/relkinema.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/relkinema.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/relkinema.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
relkinema.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/aboutcls.cpp $(srcdir)/kinemaplotcls.cpp $(srcdir)/linereadcls.cpp $(srcdir)/main.cpp $(srcdir)/mboxcls.cpp $(srcdir)/mdmcls.cpp $(srcdir)/rclistcls.cpp $(srcdir)/relkinemaCls.cpp $(srcdir)/resultwindowcls.cpp $(srcdir)/rkcalccls.cpp $(srcdir)/rwthreadcls.cpp about.cpp kinemaPlot.cpp lineread.cpp mdmDlg.cpp message.cpp rclist.cpp relkinemaDlg.cpp resultWindow.cpp rkCalcDlg.cpp rclistcls.moc.cpp linereadcls.moc.cpp rkcalccls.moc.cpp  relkinemaCls.moc kinemaplotcls.moc mdmDlg.moc rkCalcDlg.moc lineread.moc resultwindowcls.moc mboxcls.moc mdmcls.moc resultWindow.moc about.moc aboutcls.moc rclist.moc message.moc kinemaPlot.moc relkinemaDlg.moc
	@echo 'creating relkinema.all_cpp.cpp ...'; \
	rm -f relkinema.all_cpp.files relkinema.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> relkinema.all_cpp.final; \
	for file in aboutcls.cpp kinemaplotcls.cpp linereadcls.cpp main.cpp mboxcls.cpp mdmcls.cpp rclistcls.cpp relkinemaCls.cpp resultwindowcls.cpp rkcalccls.cpp rwthreadcls.cpp about.cpp kinemaPlot.cpp lineread.cpp mdmDlg.cpp message.cpp rclist.cpp relkinemaDlg.cpp resultWindow.cpp rkCalcDlg.cpp rclistcls.moc.cpp linereadcls.moc.cpp rkcalccls.moc.cpp ; do \
	  echo "#include \"$$file\"" >> relkinema.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> relkinema.all_cpp.final; \
	done; \
	cat relkinema.all_cpp.final relkinema.all_cpp.files > relkinema.all_cpp.cpp; \
	rm -f relkinema.all_cpp.final relkinema.all_cpp.files

#>+ 3
clean-final:
	-rm -f relkinema.all_cpp.cpp

#>+ 3
final:
	$(MAKE) relkinema_OBJECTS="$(relkinema_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) relkinema_OBJECTS="$(relkinema_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) relkinema_OBJECTS="$(relkinema_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) relkinema_OBJECTS="$(relkinema_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 27
aboutcls.o: aboutcls.moc 
$(srcdir)/resultwindowcls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
$(srcdir)/main.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
kinemaplotcls.lo: kinemaplotcls.moc 
mdmcls.o: mdmcls.moc 
$(srcdir)/relkinemaCls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
$(srcdir)/rclistcls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
$(srcdir)/rkcalccls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
mboxcls.lo: mboxcls.moc 
kinemaplotcls.o: kinemaplotcls.moc 
nmcheck: 
resultwindowcls.lo: resultwindowcls.moc 
resultwindowcls.o: resultwindowcls.moc 
$(srcdir)/kinemaplotcls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
$(srcdir)/aboutcls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
$(srcdir)/linereadcls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
nmcheck-am: nmcheck
$(srcdir)/mdmcls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
$(srcdir)/rwthreadcls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
$(srcdir)/mboxcls.cpp: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
mdmcls.lo: mdmcls.moc 
$(srcdir)/rkcore.f90: about.h kinemaPlot.h lineread.h mdmDlg.h message.h rclist.h relkinemaDlg.h resultWindow.h rkCalcDlg.h 
relkinemaCls.o: relkinemaCls.moc 
aboutcls.lo: aboutcls.moc 
relkinemaCls.lo: relkinemaCls.moc 
mboxcls.o: mboxcls.moc 

#>+ 135
message.cpp: $(srcdir)/message.ui message.h message.moc
	rm -f message.cpp
	echo '#include <kdialog.h>' > message.cpp
	echo '#include <klocale.h>' >> message.cpp
	$(UIC) -tr ${UIC_TR} -i message.h $(srcdir)/message.ui > message.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" message.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_message,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> message.cpp ;\
	rm -f message.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "message.moc"' >> message.cpp; else rm -f message.cpp ; exit $$ret ; fi

message.h: $(srcdir)/message.ui
	rm -rf message.h;
	$(UIC) $(srcdir)/message.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> message.h ;
message.moc: message.h
	$(MOC) message.h -o message.moc

relkinemaDlg.cpp: $(srcdir)/relkinemaDlg.ui relkinemaDlg.h relkinemaDlg.moc
	rm -f relkinemaDlg.cpp
	echo '#include <kdialog.h>' > relkinemaDlg.cpp
	echo '#include <klocale.h>' >> relkinemaDlg.cpp
	$(UIC) -tr ${UIC_TR} -i relkinemaDlg.h $(srcdir)/relkinemaDlg.ui > relkinemaDlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" relkinemaDlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_relkinemaDlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> relkinemaDlg.cpp ;\
	rm -f relkinemaDlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "relkinemaDlg.moc"' >> relkinemaDlg.cpp; else rm -f relkinemaDlg.cpp ; exit $$ret ; fi

relkinemaDlg.h: $(srcdir)/relkinemaDlg.ui
	rm -rf relkinemaDlg.h;
	$(UIC) $(srcdir)/relkinemaDlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> relkinemaDlg.h ;
relkinemaDlg.moc: relkinemaDlg.h
	$(MOC) relkinemaDlg.h -o relkinemaDlg.moc

rclist.cpp: $(srcdir)/rclist.ui rclist.h rclist.moc
	rm -f rclist.cpp
	echo '#include <kdialog.h>' > rclist.cpp
	echo '#include <klocale.h>' >> rclist.cpp
	$(UIC) -tr ${UIC_TR} -i rclist.h $(srcdir)/rclist.ui > rclist.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" rclist.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_rclist,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> rclist.cpp ;\
	rm -f rclist.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "rclist.moc"' >> rclist.cpp; else rm -f rclist.cpp ; exit $$ret ; fi

rclist.h: $(srcdir)/rclist.ui
	rm -rf rclist.h;
	$(UIC) $(srcdir)/rclist.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> rclist.h ;
rclist.moc: rclist.h
	$(MOC) rclist.h -o rclist.moc

mdmDlg.cpp: $(srcdir)/mdmDlg.ui mdmDlg.h mdmDlg.moc
	rm -f mdmDlg.cpp
	echo '#include <kdialog.h>' > mdmDlg.cpp
	echo '#include <klocale.h>' >> mdmDlg.cpp
	$(UIC) -tr ${UIC_TR} -i mdmDlg.h $(srcdir)/mdmDlg.ui > mdmDlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" mdmDlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_mdmDlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> mdmDlg.cpp ;\
	rm -f mdmDlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "mdmDlg.moc"' >> mdmDlg.cpp; else rm -f mdmDlg.cpp ; exit $$ret ; fi

mdmDlg.h: $(srcdir)/mdmDlg.ui
	rm -rf mdmDlg.h;
	$(UIC) $(srcdir)/mdmDlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> mdmDlg.h ;
mdmDlg.moc: mdmDlg.h
	$(MOC) mdmDlg.h -o mdmDlg.moc

resultWindow.cpp: $(srcdir)/resultWindow.ui resultWindow.h resultWindow.moc
	rm -f resultWindow.cpp
	echo '#include <kdialog.h>' > resultWindow.cpp
	echo '#include <klocale.h>' >> resultWindow.cpp
	$(UIC) -tr ${UIC_TR} -i resultWindow.h $(srcdir)/resultWindow.ui > resultWindow.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" resultWindow.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_resultWindow,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> resultWindow.cpp ;\
	rm -f resultWindow.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "resultWindow.moc"' >> resultWindow.cpp; else rm -f resultWindow.cpp ; exit $$ret ; fi

resultWindow.h: $(srcdir)/resultWindow.ui
	rm -rf resultWindow.h;
	$(UIC) $(srcdir)/resultWindow.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> resultWindow.h ;
resultWindow.moc: resultWindow.h
	$(MOC) resultWindow.h -o resultWindow.moc

about.cpp: $(srcdir)/about.ui about.h about.moc
	rm -f about.cpp
	echo '#include <kdialog.h>' > about.cpp
	echo '#include <klocale.h>' >> about.cpp
	$(UIC) -tr ${UIC_TR} -i about.h $(srcdir)/about.ui > about.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" about.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_about,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> about.cpp ;\
	rm -f about.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "about.moc"' >> about.cpp; else rm -f about.cpp ; exit $$ret ; fi

about.h: $(srcdir)/about.ui
	rm -rf about.h;
	$(UIC) $(srcdir)/about.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> about.h ;
about.moc: about.h
	$(MOC) about.h -o about.moc

rkCalcDlg.cpp: $(srcdir)/rkCalcDlg.ui rkCalcDlg.h rkCalcDlg.moc
	rm -f rkCalcDlg.cpp
	echo '#include <kdialog.h>' > rkCalcDlg.cpp
	echo '#include <klocale.h>' >> rkCalcDlg.cpp
	$(UIC) -tr ${UIC_TR} -i rkCalcDlg.h $(srcdir)/rkCalcDlg.ui > rkCalcDlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" rkCalcDlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_rkCalcDlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> rkCalcDlg.cpp ;\
	rm -f rkCalcDlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "rkCalcDlg.moc"' >> rkCalcDlg.cpp; else rm -f rkCalcDlg.cpp ; exit $$ret ; fi

rkCalcDlg.h: $(srcdir)/rkCalcDlg.ui
	rm -rf rkCalcDlg.h;
	$(UIC) $(srcdir)/rkCalcDlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> rkCalcDlg.h ;
rkCalcDlg.moc: rkCalcDlg.h
	$(MOC) rkCalcDlg.h -o rkCalcDlg.moc

kinemaPlot.cpp: $(srcdir)/kinemaPlot.ui kinemaPlot.h kinemaPlot.moc
	rm -f kinemaPlot.cpp
	echo '#include <kdialog.h>' > kinemaPlot.cpp
	echo '#include <klocale.h>' >> kinemaPlot.cpp
	$(UIC) -tr ${UIC_TR} -i kinemaPlot.h $(srcdir)/kinemaPlot.ui > kinemaPlot.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kinemaPlot.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kinemaPlot,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kinemaPlot.cpp ;\
	rm -f kinemaPlot.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kinemaPlot.moc"' >> kinemaPlot.cpp; else rm -f kinemaPlot.cpp ; exit $$ret ; fi

kinemaPlot.h: $(srcdir)/kinemaPlot.ui
	rm -rf kinemaPlot.h;
	$(UIC) $(srcdir)/kinemaPlot.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kinemaPlot.h ;
kinemaPlot.moc: kinemaPlot.h
	$(MOC) kinemaPlot.h -o kinemaPlot.moc

lineread.cpp: $(srcdir)/lineread.ui lineread.h lineread.moc
	rm -f lineread.cpp
	echo '#include <kdialog.h>' > lineread.cpp
	echo '#include <klocale.h>' >> lineread.cpp
	$(UIC) -tr ${UIC_TR} -i lineread.h $(srcdir)/lineread.ui > lineread.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" lineread.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_lineread,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> lineread.cpp ;\
	rm -f lineread.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "lineread.moc"' >> lineread.cpp; else rm -f lineread.cpp ; exit $$ret ; fi

lineread.h: $(srcdir)/lineread.ui
	rm -rf lineread.h;
	$(UIC) $(srcdir)/lineread.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> lineread.h ;
lineread.moc: lineread.h
	$(MOC) lineread.h -o lineread.moc
